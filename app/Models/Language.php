<?php

/*
 * NuraWeb - Free and Open Source Website Builder
 *
 * Copyright (C) 2024  Chimilevschi Iosif Gabriel, https://nurasoftware.com.
 *
 * LICENSE:
 * NuraWeb is licensed under the GNU General Public License v3.0
 * Permissions of this strong copyleft license are conditioned on making available complete source code 
 * of licensed works and modifications, which include larger works using a licensed work, under the same license. 
 * Copyright and license notices must be preserved. Contributors provide an express grant of patent rights.
 *    
 * @copyright   Copyright (c) 2024, Chimilevschi Iosif Gabriel, https://nurasoftware.com.
 * @license     https://opensource.org/licenses/GPL-3.0  GPL-3.0 License.
 * @author      Chimilevschi Iosif Gabriel <office@nurasoftware.com>
 * 
 * 
 * IMPORTANT: DO NOT edit this file manually. All changes will be lost after software update.
 */

namespace App\Models;

use App;
use Illuminate\Database\Eloquent\Model;

class Language extends Model
{
    protected $table = 'languages'; // Specifies the name of the table

    protected $fillable = ['name', 'code', 'locale', 'is_default', 'status', 'timezone', 'dir']; // Defines the attributes that are mass assignable

    public $timestamps = false; // Indicates that the model does not have timestamp fields

    protected $appends = ['site_label'];
    
    // Get active and inactive languages
    public static function get_languages()
    {
        $langs = Language::where('status',  '!=', 'disabled')->orderByDesc('is_default')->orderBy('status')->get();

        return $langs;
    }

    // Get only active languages
    public static function get_active_languages()
    {
        $langs = Language::where('status', 'active')->orderByDesc('is_default')->get();

        return $langs;
    }


    // Website active language
    public static function get_active_language()
    {
        $lang = Language::where('code', App::getLocale() ?? null)->first();

        if (!$lang) $lang = Language::where('is_default', 1)->first();

        return $lang;
    }


    // Website default language
    public static function get_default_language()
    {
        $lang = Language::where('is_default', 1)->first();

        return $lang;
    }


    /**
     * Get language from code
     */
    public static function get_language_from_code($code)
    {
        $lang = Language::where('code', $code)->first();

        return $lang;
    }

    /**
     * Get language from ID
     */
    public static function get_language_from_id($id)
    {
        $lang = Language::where('id', $id)->first();

        return $lang;
    }

    public function block_content()
    {
        return $this->hasOne(BlockContent::class, 'lang_id');
    }

    public function footer_block_content()
    {
        return $this->hasOne(ThemeFooterBlockContent::class, 'lang_id');
    } 

    public function page_content()
    {
        return $this->hasOne(PageContent::class, 'lang_id');
    }

    public function getSiteLabelAttribute()
    {        
        $label  = ConfigLang::get_config($this->id, 'site_label');        

        return $label;
    }

}
