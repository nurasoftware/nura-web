<?php

/*
 * NuraWeb - Free and Open Source Website Builder
 *
 * Copyright (C) 2024  Chimilevschi Iosif Gabriel, https://nurasoftware.com.
 *
 * LICENSE:
 * NuraWeb is licensed under the GNU General Public License v3.0
 * Permissions of this strong copyleft license are conditioned on making available complete source code 
 * of licensed works and modifications, which include larger works using a licensed work, under the same license. 
 * Copyright and license notices must be preserved. Contributors provide an express grant of patent rights.
 *    
 * @copyright   Copyright (c) 2024, Chimilevschi Iosif Gabriel, https://nurasoftware.com.
 * @license     https://opensource.org/licenses/GPL-3.0  GPL-3.0 License.
 * @author      Chimilevschi Iosif Gabriel <office@nurasoftware.com>
 * 
 * 
 * IMPORTANT: DO NOT edit this file manually. All changes will be lost after software update.
 */

namespace App\Models;

use Illuminate\Database\Eloquent\Model;
use Cache;

class ConfigLang extends Model
{
    protected $fillable = [
        'lang_id',
        'name',
        'value',
    ];

    protected $table = 'config_lang';

    /**
     * Indicates if the model should be timestamped.
     *
     * @var bool
     */
    public $timestamps = false;


    /**
     * Get configs from database
     *
     * @return object
     */
    public static function config()
    {        
        $results = Cache::remember('config_lang', 60 * 60 * 24, function () {
            return ConfigLang::where('lang_id', Language::get_active_language()->id)->pluck('value', 'name')->toArray();
        });             

        return (object) $results;
    }


     /**
     * Get specific config value from database
     *
     * @return string
     */
    public static function get_config($lang_id, $name)
    {        
        return ConfigLang::where('lang_id', $lang_id)->where('name', $name)->value('value') ?? null;
        
    }



    /**
     * Update sys config
     *
     * @return null
     */
    public static function update_config($lang_id, $name, $value = null)
    {
        if (is_array($name)) {
            foreach ($name as $key => $value) {
                if ($key != '_token') ConfigLang::updateOrCreate(['lang_id' => $lang_id, 'name' => $key], ['value' => $value]);
            }
        } else {
            ConfigLang::updateOrCreate(['lang_id' => $lang_id, 'name' => $name], ['value' => $value]);
        }

        // clear cache
        Cache::forget('config_lang');

        return null;
    }
}
