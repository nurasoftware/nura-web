<?php

/*
 * NuraWeb - Free and Open Source Website Builder
 *
 * Copyright (C) 2024  Chimilevschi Iosif Gabriel, https://nurasoftware.com.
 *
 * LICENSE:
 * NuraWeb is licensed under the GNU General Public License v3.0
 * Permissions of this strong copyleft license are conditioned on making available complete source code 
 * of licensed works and modifications, which include larger works using a licensed work, under the same license. 
 * Copyright and license notices must be preserved. Contributors provide an express grant of patent rights.
 *    
 * @copyright   Copyright (c) 2024, Chimilevschi Iosif Gabriel, https://nurasoftware.com.
 * @license     https://opensource.org/licenses/GPL-3.0  GPL-3.0 License.
 * @author      Chimilevschi Iosif Gabriel <office@nurasoftware.com>
 * 
 * 
 * IMPORTANT: DO NOT edit this file manually. All changes will be lost after software update.
 */

namespace App\Models;

use Illuminate\Database\Eloquent\Model;

class ThemeMenu extends Model
{
    protected $fillable = [
        'parent_id',
        'type',
        'value',
        'position',
        'new_tab',
        'btn_id',
        'css_class',
        'icon'
    ];

    protected $table = 'theme_menu';

    /**
     * Indicates if the model should be timestamped.
     *
     * @var bool
     */
    public $timestamps = false;


    public static function generate_menu_links()
    {
        $default_lang_id = Language::get_default_language()->id;

        $langs = Language::get_languages();

        foreach ($langs as $lang) {

            $links = ThemeMenu::whereNull('parent_id')->orderBy('position')->get();

            $items = array();

            foreach ($links as $link) {

                $dropdown = array();

                if ($link->type == 'home') {
                    if ($lang->id == Language::get_default_language()->id) $url = route('home');
                    else $url = route('home.' . $lang->code);
                }

                if ($link->type == 'contact') {
                    if ($lang->id == Language::get_default_language()->id) $url = route('contact');
                    else $url = route('contact.' . $lang->code);
                }

                if ($link->type == 'page') {
                    $page = PageContent::where('page_id', $link->value)->where('lang_id', $lang->id)->first();
                    if ($page) {
                        if ($lang->id == $default_lang_id)
                            $url = route('page', ['slug' => $page->slug ?? null]);
                        else {
                            $lang = Language::where('id', $page->lang_id)->first();
                            $url = route('page.' . $lang->code, ['slug' => $page->slug]);
                        }
                    } else $url = '#';
                }

                if ($link->type == 'custom')
                    $url = $link->value;

                if ($link->type == 'dropdown') {
                    $url = '#';

                    $dropdown_links = ThemeMenu::where('parent_id', $link->id)->orderBy('position')->get();
                    foreach ($dropdown_links as $dropdown_link) {
                        if ($dropdown_link->type == 'home') {
                            if ($lang->id == Language::get_default_language()->id) $dropdown_url = route('home');
                            else $dropdown_url = route('home.' . $lang->code);
                        }

                        if ($dropdown_link->type == 'contact') {
                            if ($lang->id == Language::get_default_language()->id) $dropdown_url = route('contact');
                            else $dropdown_url = route('contact.' . $lang->code);
                        }

                        if ($dropdown_link->type == 'page') {
                            $page = PageContent::where('page_id', $dropdown_link->value)->where('lang_id', $lang->id)->first();
                            if ($page) {
                                if ($lang->id == Language::get_default_language()->id)
                                    $dropdown_url = route('page', ['slug' => $page->slug ?? null]);
                                else {
                                    $lang = Language::where('id', $page->lang_id)->first();
                                    $dropdown_url = route('page.' . $lang->code, ['slug' => $page->slug]);
                                }
                            } else $dropdown_url = '#';
                        }

                        if ($dropdown_link->type == 'custom')
                            $dropdown_url = $dropdown_link->value;

                        $dropdown[] = array('label' => (get_menu_link_label($dropdown_link->id, $lang->id)) ?? '#', 'url' => $dropdown_url ?? null, 'new_tab' => $dropdown_link->new_tab, 'icon' => $dropdown_link->icon);
                    }
                }

                $items[] = array('label' => (get_menu_link_label($link->id, $lang->id)) ?? '#', 'url' => $url ?? '#', 'dropdown' => $dropdown, 'type' => $link->type, 'btn_id' => $link->btn_id, 'css_class' => $link->css_class, 'new_tab' => $link->new_tab, 'icon' => $link->icon);
            }

            ConfigLang::update_config($lang->id, 'menu_links', serialize($items));
        }        

        return null;
    }
}
