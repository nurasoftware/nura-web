<?php

/*
 * NuraWeb - Free and Open Source Website Builder
 *
 * Copyright (C) 2024  Chimilevschi Iosif Gabriel, https://nurasoftware.com.
 *
 * LICENSE:
 * NuraWeb is licensed under the GNU General Public License v3.0
 * Permissions of this strong copyleft license are conditioned on making available complete source code 
 * of licensed works and modifications, which include larger works using a licensed work, under the same license. 
 * Copyright and license notices must be preserved. Contributors provide an express grant of patent rights.
 *    
 * @copyright   Copyright (c) 2024, Chimilevschi Iosif Gabriel, https://nurasoftware.com.
 * @license     https://opensource.org/licenses/GPL-3.0  GPL-3.0 License.
 * @author      Chimilevschi Iosif Gabriel <office@nurasoftware.com>
 * 
 * 
 * IMPORTANT: DO NOT edit this file manually. All changes will be lost after software update.
 */

namespace App\Http\Controllers\Web;

use App\Http\Controllers\Controller;
use Illuminate\Http\Request;
use App\Models\Page;
use App\Models\PageContent;
use App\Models\Config;
use App\Models\ConfigLang;
use App\Models\Language;
use Auth;

class PageController extends Controller
{


    public function __construct()
    {
        $this->middleware(function ($request, $next) {
            if (Config::config()->website_disabled ?? null) {
                if (!Auth::user()) return redirect(route('login'));

                $role = Auth::user()->role ?? null;
                if ($role == 'admin') return redirect(route('admin.dashboard'));
                elseif ($role == 'internal') return redirect(route('internal.dashboard'));
                elseif ($role == 'user') return redirect(route('user'));
            }

            if ((Config::config()->website_maintenance_enabled ?? null)) {
                if (!(Auth::user()->role ?? null) == 'admin') return redirect(route('maintenance'));
            }

            return $next($request);
        });
    }



    /**
     * Show page
     */
    public function show(Request $request)
    {
        $slug = $request->slug;
        $parent_slug = $request->parent_slug;

        $content = PageContent::where('slug', $slug)->where('lang_id', Language::get_active_language()->id)->first();
        if (!$content) return redirect(route('home'));

        $page = Page::with('active_language_content')->where('id', $content->page_id)->where('active', 1)->first();
        if (!$page) return redirect(route('home'));

        if ($parent_slug) {
            $parent_content = PageContent::where('slug', $parent_slug)->where('lang_id', Language::get_active_language()->id)->first();
            if (!$parent_content) return redirect(route('home'));
        }

        // update hits
        Page::where('id', $page->id)->increment('hits');

        return view('web.page', [
            'page' => $page,
            'module' => 'pages',
            'content_id' => $page->id,

            'meta_title' => $page->active_language_content->meta_title ?? (ConfigLang::config()->website_label ?? null) ?? $page->active_language_content->title ?? 'Home',
            'meta_description' => $page->active_language_content->meta_description ?? (ConfigLang::config()->website_label ?? null) ?? $page->active_language_content->title ?? 'Home',
        ]);
    }
}
