<?php

namespace App\Http\Controllers\Admin;

/*
 * NuraWeb - Free and Open Source Website Builder
 *
 * Copyright (C) 2024  Chimilevschi Iosif Gabriel, https://nurasoftware.com.
 *
 * LICENSE:
 * NuraWeb is licensed under the GNU General Public License v3.0
 * Permissions of this strong copyleft license are conditioned on making available complete source code 
 * of licensed works and modifications, which include larger works using a licensed work, under the same license. 
 * Copyright and license notices must be preserved. Contributors provide an express grant of patent rights.
 *    
 * @copyright   Copyright (c) 2024, Chimilevschi Iosif Gabriel, https://nurasoftware.com.
 * @license     https://opensource.org/licenses/GPL-3.0  GPL-3.0 License.
 * @author      Chimilevschi Iosif Gabriel <contact@nurasoftware.com>
 * 
 * 
 * IMPORTANT: DO NOT edit this file manually. All changes will be lost after software update.
 */

use App\Http\Controllers\Controller;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Validator;
use Illuminate\Support\Facades\Hash;
use Auth;
use App\Models\Upload;
use App\Models\User;

class ProfileController extends Controller
{

    /**
     * Display profile page for logged user
     */
    public function index()
    {
        return view('admin.index', [
            'view_file' => 'tools.profile',
            'active_menu' => 'dashboard',
            'pagename' => 'Profile',
        ]);
    }


    /**
     * Update profile
     */
    public function update(Request $request)
    {
        $validator = Validator::make($request->all(), [
            'name' => 'required',
            'email' => 'email'
        ]);

        if ($validator->fails()) {
            return redirect($request->Url())
                ->withErrors($validator)
                ->withInput();
        }

        $inputs = $request->all();

        // check if email exist
        if (User::where('email', $request->email)->where('id', '!=', Auth::user()->id)->exists())
            return redirect(route('admin.profile'))->with('error', 'duplicate');

        User::where('id', Auth::user()->id)
            ->update([
                'name' => $request->name,
                'email' => $request->email,
            ]);

        // change password
        if ($request->password) {
            User::where('id', Auth::user()->id)->update(['password' => Hash::make($inputs['password'])]);
        }

        // process image        
        if ($request->hasFile('avatar')) Upload::createAvatar($request->file('avatar'));

        return redirect(route('admin.profile'))->with('success', 'updated');
    }


    /**
     * Delete user profile avatare
     */
    public function delete_avatar()
    {
        $user = User::find(Auth::user()->id);

        $currentAvatarPath = getcwd() . '/uploads/avatars/' . $user->avatar;
        $currentAvatarThumbPath = getcwd() . '/uploads/avatars/thumb_' . $user->avatar;
        @unlink($currentAvatarPath);
        @unlink($currentAvatarThumbPath);

        User::find(Auth::user()->id)->update(['avatar' => NULL]);

        return redirect(route('admin.profile'))->with('success', 'updated');
    }

}
