<?php

/*
 * NuraWeb - Free and Open Source Website Builder
 *
 * Copyright (C) 2024  Chimilevschi Iosif Gabriel, https://nurasoftware.com.
 *
 * LICENSE:
 * NuraWeb is licensed under the GNU General Public License v3.0
 * Permissions of this strong copyleft license are conditioned on making available complete source code 
 * of licensed works and modifications, which include larger works using a licensed work, under the same license. 
 * Copyright and license notices must be preserved. Contributors provide an express grant of patent rights.
 *    
 * @copyright   Copyright (c) 2024, Chimilevschi Iosif Gabriel, https://nurasoftware.com.
 * @license     https://opensource.org/licenses/GPL-3.0  GPL-3.0 License.
 * @author      Chimilevschi Iosif Gabriel <contact@nurasoftware.com>
 * 
 * 
 * IMPORTANT: DO NOT edit this file manually. All changes will be lost after software update.
 */

use Illuminate\Foundation\Application;
use Illuminate\Foundation\Configuration\Exceptions;
use Illuminate\Foundation\Configuration\Middleware;
use Symfony\Component\HttpKernel\Exception\NotFoundHttpException;
use Illuminate\Http\Request;

use App\Http\Middleware\NuraMiddleware;
use App\Http\Middleware\LoggedIsStaff;
use App\Http\Middleware\LoggedIsUser;
use App\Http\Middleware\CheckWebsite;

return Application::configure(basePath: dirname(__DIR__))
    ->withRouting(
        web: __DIR__ . '/../routes/web.php',
        commands: __DIR__ . '/../routes/console.php',
        health: '/up',

        using: function () {

            Route::middleware(['web'])
                ->group(function () {
                    Route::middleware(['web', 'auth', 'verified', 'LoggedIsStaff', 'NuraMiddleware'])->group(base_path('routes/admin.php'));
                    Route::middleware(['web', 'CheckWebsite', 'NuraMiddleware'])->group(base_path('routes/web.php'));
                    Route::middleware(['web', 'CheckWebsite', 'NuraMiddleware'])->group(base_path('routes/custom.php'));
                });
        }

    )
    ->withMiddleware(function (Middleware $middleware) {
        $middleware->alias([
            'NuraMiddleware' => NuraMiddleware::class,
            'LoggedIsStaff' => LoggedIsStaff::class,
            'LoggedIsUser' => LoggedIsUser::class,
            'CheckWebsite' => CheckWebsite::class,
        ]);

        $middleware->validateCsrfTokens(except: [
            'logout',
        ]);
    })
    ->withExceptions(function (Exceptions $exceptions) {
        $exceptions->render(function (\Exception $e) {
            if ($e->getPrevious() instanceof \Illuminate\Session\TokenMismatchException) {
                return redirect()->back()->withInput(request()->except('_token'))->withError('Invalid token. Please submit the form again');
            };
        });
        $exceptions->render(function (NotFoundHttpException $e, Request $request) {
            return response()->view('errors.404', [], 404);
        });
    })->create();
